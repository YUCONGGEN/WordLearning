<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lhf223.word.mapper.WordMapper">
  <resultMap id="BaseResultMap" type="cn.lhf223.word.model.Word">
    <!--@mbg.generated-->
    <!--@Table word-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phonetic" jdbcType="VARCHAR" property="phonetic" />
    <result column="explain" jdbcType="VARCHAR" property="explain" />
    <result column="example" jdbcType="VARCHAR" property="example" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, phonetic, `explain`, example, book_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from word
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from word
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.lhf223.word.model.Word" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into word (`name`, phonetic, `explain`, 
      example, book_id)
    values (#{name,jdbcType=VARCHAR}, #{phonetic,jdbcType=VARCHAR}, #{explain,jdbcType=VARCHAR}, 
      #{example,jdbcType=VARCHAR}, #{bookId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.lhf223.word.model.Word" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into word
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="phonetic != null">
        phonetic,
      </if>
      <if test="explain != null">
        `explain`,
      </if>
      <if test="example != null">
        example,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phonetic != null">
        #{phonetic,jdbcType=VARCHAR},
      </if>
      <if test="explain != null">
        #{explain,jdbcType=VARCHAR},
      </if>
      <if test="example != null">
        #{example,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lhf223.word.model.Word">
    <!--@mbg.generated-->
    update word
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phonetic != null">
        phonetic = #{phonetic,jdbcType=VARCHAR},
      </if>
      <if test="explain != null">
        `explain` = #{explain,jdbcType=VARCHAR},
      </if>
      <if test="example != null">
        example = #{example,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lhf223.word.model.Word">
    <!--@mbg.generated-->
    update word
    set `name` = #{name,jdbcType=VARCHAR},
      phonetic = #{phonetic,jdbcType=VARCHAR},
      `explain` = #{explain,jdbcType=VARCHAR},
      example = #{example,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteUserWord">
    delete from user_word where user_id=#{userId,jdbcType=INTEGER}
  </delete>

<!--auto generated by MybatisCodeHelper on 2021-02-18-->
  <select id="selectAllByBookId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from word
    where book_id=#{bookId,jdbcType=INTEGER}
  </select>


  <insert id="insertUserWords">
    insert into user_word(user_id, word_id, update_time) VALUES
    <foreach collection="words" item="word" separator=",">
      (#{userId,jdbcType=INTEGER},#{word.id,jdbcType=INTEGER},now())
    </foreach>
  </insert>

  <select id="selectUserWordByFlag" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from word w,user_word uw
    where w.id = uw.word_id and uw.user_id = #{userId,jdbcType=INTEGER} and uw.flag = #{flag,jdbcType=INTEGER}
    <if test="date != null">
      and TO_DAYS(#{date,jdbcType=TIMESTAMP}) - TO_DAYS(update_time) >0
    </if>
    order by uw.update_time
    limit #{limit,jdbcType=INTEGER}
  </select>

  <update id="updateUserWord">
    update user_word set flag = 1 where user_id = #{userId,jdbcType=INTEGER} and word_id = #{wordId,jdbcType=INTEGER}
  </update>

  <select id="selectUserWordFlag" resultType="Integer">
    select flag from user_word where user_id = #{userId,jdbcType=INTEGER} and word_id = #{wordId,jdbcType=INTEGER}
  </select>

  <select id="countWord" resultType="Integer">
    select count(word_id) from user_word where user_id = #{userId,jdbcType=INTEGER} and flag = 1;
  </select>
</mapper>